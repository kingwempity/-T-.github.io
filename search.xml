<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2024-计划书单</title>
    <url>/2024/01/23/2024-%E8%AE%A1%E5%88%92%E4%B9%A6%E5%8D%95/</url>
    <content><![CDATA[<h2 id="预祝新的一年你会有更多的属于自己的时刻！❀❀❀"><a href="#预祝新的一年你会有更多的属于自己的时刻！❀❀❀" class="headerlink" title="预祝新的一年你会有更多的属于自己的时刻！❀❀❀"></a>预祝新的一年你会有更多的属于自己的时刻！❀❀❀</h2><h3 id="《家山》-王跃文"><a href="#《家山》-王跃文" class="headerlink" title="《家山》-王跃文"></a>《家山》-王跃文</h3><ul>
<li><p><input disabled="" type="checkbox"> 
looking forward to </p>
</li>
<li><p><input checked="" disabled="" type="checkbox"> 
reading </p>
</li>
<li><p><input disabled="" type="checkbox"> 
over</p>
</li>
</ul>
<blockquote>
<p>每一个人心中都会有一座属于自己的家山。</p>
</blockquote>
<h3 id="《且听风吟》-村上春树"><a href="#《且听风吟》-村上春树" class="headerlink" title="《且听风吟》-村上春树"></a>《且听风吟》-村上春树</h3><ul>
<li><input checked="" disabled="" type="checkbox"> looking forward to</li>
<li><input disabled="" type="checkbox"> reading</li>
<li><input disabled="" type="checkbox"> over</li>
</ul>
<blockquote>
<p>这世间，中有一个人懂你，让你抿起嘴，想念时流下眼泪。那些曾以为走不出的日子，现在都回不去了。~</p>
</blockquote>
<h3 id="《1973年的弹子球》-村上春树"><a href="#《1973年的弹子球》-村上春树" class="headerlink" title="《1973年的弹子球》-村上春树"></a>《1973年的弹子球》-村上春树</h3><ul>
<li><input checked="" disabled="" type="checkbox"> looking forward to</li>
<li><input disabled="" type="checkbox"> reading</li>
<li><input disabled="" type="checkbox"> over</li>
</ul>
<blockquote>
<p>长大，或许就是终有一天你会知道，有些事物，当它从我们的生命中遗落时，就已经无法寻回。</p>
</blockquote>
<h3 id="《寻羊冒险记》-村上春树"><a href="#《寻羊冒险记》-村上春树" class="headerlink" title="《寻羊冒险记》-村上春树"></a>《寻羊冒险记》-村上春树</h3><ul>
<li><input checked="" disabled="" type="checkbox"> looking forward to</li>
<li><input disabled="" type="checkbox"> reading</li>
<li><input disabled="" type="checkbox"> over</li>
</ul>
<blockquote>
<p>我喜欢我的懦弱，痛苦和难堪也喜欢，喜欢夏天的光照，风的气息，蝉的鸣叫，我喜欢这些，喜欢的不得了。</p>
</blockquote>
<h3 id="《了不起的盖茨比》-译村上春树"><a href="#《了不起的盖茨比》-译村上春树" class="headerlink" title="《了不起的盖茨比》-译村上春树"></a>《了不起的盖茨比》-译村上春树</h3><ul>
<li><input checked="" disabled="" type="checkbox"> looking forward to</li>
<li><input disabled="" type="checkbox"> reading</li>
<li><input disabled="" type="checkbox"> over</li>
</ul>
<blockquote>
<p>这个世界，并不是所有人，都拥有你的那些优势。</p>
</blockquote>
<h3 id="《蛤蟆先生看心理医生》"><a href="#《蛤蟆先生看心理医生》" class="headerlink" title="《蛤蟆先生看心理医生》"></a>《蛤蟆先生看心理医生》</h3><ul>
<li><input disabled="" type="checkbox"> looking forward to</li>
<li><input checked="" disabled="" type="checkbox"> reading</li>
<li><input disabled="" type="checkbox"> over</li>
</ul>
<blockquote>
<p>能帮助你的人，只有你自己的。请相信，你可以完成这一切的，你并不是自以为的那样弱小。</p>
</blockquote>
<h3 id="《The-Wind-in-the-Willows》《柳林风声》"><a href="#《The-Wind-in-the-Willows》《柳林风声》" class="headerlink" title="《The Wind in the Willows》《柳林风声》"></a>《The Wind in the Willows》《柳林风声》</h3><ul>
<li><input checked="" disabled="" type="checkbox"> looking forward to</li>
<li><input disabled="" type="checkbox"> reading</li>
<li><input disabled="" type="checkbox"> over</li>
</ul>
<blockquote>
<p>关于四个小动物之间的友情陪伴和共同冒险的人生故事，蛤蟆先生的原型。</p>
</blockquote>
]]></content>
      <tags>
        <tag>-2024 -书单 -Love -Book</tag>
      </tags>
  </entry>
  <entry>
    <title>Open new world</title>
    <url>/2024/01/13/Open-new-world/</url>
    <content><![CDATA[<h2 id="OPEN-NEW-WORLD"><a href="#OPEN-NEW-WORLD" class="headerlink" title="OPEN NEW WORLD"></a>OPEN NEW WORLD</h2><p>敬请T期待！</p>
<p>路漫漫其修远兮，吾将上下而求索！</p>
<p>​																–《离骚》屈原</p>
<p>杨宪益先生 译：<br>The way was long, and wrapped in gloom did seem,<br>As I urged on to seek my vanished dream.</p>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Hope_flag</tag>
      </tags>
  </entry>
  <entry>
    <title>Python从入门到实践</title>
    <url>/2024/01/21/Python%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="概念定义"><a href="#概念定义" class="headerlink" title="概念定义"></a>概念定义</h3><blockquote>
<p>字符串是一系列字符</p>
</blockquote>
<h3 id="使用字符串"><a href="#使用字符串" class="headerlink" title="使用字符串"></a>使用字符串</h3><blockquote>
<ol>
<li>字符串元素的大小写</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;Ada Lovelace&quot;</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"><span class="built_in">print</span>(name.title())<span class="comment">#首字母大写</span></span><br><span class="line"><span class="built_in">print</span>(name.upper())<span class="comment">#所有字母大写</span></span><br><span class="line"><span class="built_in">print</span>(name.lower())<span class="comment">#所有字母小写</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Ada Lovelace</span><br><span class="line">Ada Lovelace</span><br><span class="line">ADA LOVELACE</span><br><span class="line">ada lovelace</span><br></pre></td></tr></table></figure></div>

<ol start="2">
<li><p>删除字符串空白</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;language=<span class="string">&#x27; python </span></span><br><span class="line"><span class="string">&gt;&gt;&gt;language</span></span><br><span class="line"><span class="string">&#x27;</span> python <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;language.lstrip()#删除左端空白</span></span><br><span class="line"><span class="string">&#x27;</span>python <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;language.rstrip()#删除右端空白</span></span><br><span class="line"><span class="string">&#x27;</span> python<span class="string">&#x27;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;language.strip()#删除左右两端空白</span></span><br><span class="line"><span class="string">&#x27;</span>python<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p>删除前缀</p>
</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;nostarch_url=<span class="string">&quot;https://nostarch.com&quot;</span></span><br><span class="line">&gt;&gt;&gt;nostarch_url.removeprefix(<span class="string">&#x27;https://&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;nostarch.com&#x27;</span></span><br></pre></td></tr></table></figure></div>
</blockquote>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="概念定义-1"><a href="#概念定义-1" class="headerlink" title="概念定义"></a>概念定义</h3><blockquote>
<p>列表(list)是由一系列按照特定顺序排列的元素组成</p>
</blockquote>
<h3 id="访问列表元素"><a href="#访问列表元素" class="headerlink" title="访问列表元素"></a>访问列表元素</h3><blockquote>
<ol>
<li>利用元素的索引来访问元素值</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">bicycles=[<span class="string">&#x27;trek&#x27;</span>,<span class="string">&#x27;cannondale&#x27;</span>,<span class="string">&#x27;redline&#x27;</span>,<span class="string">&#x27;specialized&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(bicycles[<span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(bicycles[-<span class="number">1</span>])</span><br><span class="line">messages=<span class="string">f&quot;My first bicycle was a <span class="subst">&#123;bicycles[<span class="number">0</span>].title()&#125;</span>&quot;</span><span class="string">&#x27;&#x27;&#x27;在字符串中插入变量的值，使用f字符串，f为format的简写，Python通过把花括号的变量替换成变量的值来设置字符串的格式&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(messages)</span><br><span class="line"><span class="comment">#列表元素的索引是从0开始</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;列表元素索引为3的元素为specialized,而不是redline&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;索引-1表示列表的最后一个元素&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment">#bicycles[0]为对象；title()为方法即函数；</span></span><br><span class="line"><span class="comment">#bicycles[0].title()为对象调用title()方法的形式</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">trek</span><br><span class="line">specialized</span><br><span class="line">specialized</span><br><span class="line">My first bicyvle was a Trek</span><br></pre></td></tr></table></figure></div>

<ol start="2">
<li>修改列表元素</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#motorcycles.py</span></span><br><span class="line">motorcycles=[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"></span><br><span class="line">motorcycles[<span class="number">0</span>]=<span class="string">&#x27;ducati&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;ducati&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br></pre></td></tr></table></figure></div>

<ol start="3">
<li>添加列表元素</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#motorcycles.py</span></span><br><span class="line">motorcycles=[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"></span><br><span class="line">motorcycles.append(<span class="string">&#x27;ducati&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>,<span class="string">&#x27;ducati&#x27;</span>]</span><br></pre></td></tr></table></figure></div>

<ol start="4">
<li><p>删除列表元素</p>
<ul>
<li><p>使用del语句删除列表元素</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#motorcycles.py</span></span><br><span class="line">motorcycles=[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> motorcycles[<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>使用pop()方法删除列表元素，并返回删除值</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#motorcycles.py</span></span><br><span class="line">motorcycles=[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"></span><br><span class="line">motorcycle=motorcycles.pop(<span class="number">0</span>)<span class="comment">#括号内为标索引则默认删除最后一个元素，并将其返回</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;The first motorcycle I woned was a <span class="subst">&#123;motorcycle.title()&#125;</span>.&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#x27;honda&#x27;,&#x27;yamaha&#x27;,&#x27;suzuki&#x27;]</span><br><span class="line">The first motorcycle I woned was a honda.</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>根据值删除元素</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">motorcycles=[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>,<span class="string">&#x27;ducati&#x27;</span>]</span><br><span class="line">too_expensive=<span class="string">&#x27;ducati&#x27;</span></span><br><span class="line">mororcycles.remove(too_expensive)</span><br><span class="line"><span class="built_in">print</span>(motorcycles)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;\nA <span class="subst">&#123;too_expensive.title()&#125;</span> is too expensive for me!&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;honda&#x27;</span>,<span class="string">&#x27;yamaha&#x27;</span>,<span class="string">&#x27;suzuki&#x27;</span>]</span><br><span class="line">                    </span><br><span class="line">A Ducati is too expensive <span class="keyword">for</span> me!</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li><p>使用sort()方法对列表进行永久排序</p>
<ul>
<li>正序(字母表)</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cars.py</span></span><br><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">cars.sort()</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>]</span><br></pre></td></tr></table></figure></div>

<ul>
<li>反序(反字母表)</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cars.py</span></span><br><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">cars.sort(reverse==<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>,<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>]</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>使用sorted()方法对列表进行临时排序</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cars.py</span></span><br><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Here is the orignal list:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Here is the sorted list:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(cars))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sorted</span>(cars,reverse==<span class="literal">True</span>))</span><br><span class="line"></span><br><span class="line">pritn(<span class="string">&quot;Here is the orignal list agin:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Here is the orignal list:</span><br><span class="line">[<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">Here is the sorted list:</span><br><span class="line">[<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>,<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>]</span><br><span class="line">Here is the orignal list agin:</span><br><span class="line">[<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>反向打印列表</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cars.py</span></span><br><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br><span class="line"></span><br><span class="line">cars.reverse()</span><br><span class="line"><span class="built_in">print</span>(cars)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;subaru&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;bmw&#x27;</span>]</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>使用len()方法列表长度</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cars.py</span></span><br><span class="line">cars = [<span class="string">&#x27;bmw&#x27;</span>,<span class="string">&#x27;audi&#x27;</span>,<span class="string">&#x27;toyota&#x27;</span>,<span class="string">&#x27;subaru&#x27;</span>]</span><br><span class="line"><span class="built_in">len</span>(cars)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure></div></li>
</ol>
</blockquote>
<h3 id="操作列表"><a href="#操作列表" class="headerlink" title="操作列表"></a>操作列表</h3><blockquote>
<ol>
<li>遍历列表</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">magicians = [<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;david&#x27;</span>,<span class="string">&#x27;carolina&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> magician <span class="keyword">in</span> magiccians:</span><br><span class="line">    <span class="built_in">print</span>(magician)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">alice</span><br><span class="line">david</span><br><span class="line">carolina</span><br></pre></td></tr></table></figure></div>

<ol start="2">
<li>创建数值列表</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#values.py</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(value)</span><br><span class="line"><span class="comment">#for 循环打印1-4的整数，range()方法是左闭右开区间[1,5)</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#number_list.py</span></span><br><span class="line">numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">1</span>,<span class="number">6</span>))<span class="comment">#使用强制转换将数字转换成列表</span></span><br><span class="line"><span class="built_in">print</span>(numbers)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[1,2,3,4,5]</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#even_numbers_list.py</span></span><br><span class="line">even_numbers = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">2</span>,<span class="number">11</span>,<span class="number">2</span>))<span class="comment">#range()方法有3个参数时，第三个参数为步长</span></span><br><span class="line"><span class="built_in">print</span>(even_numbers)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[2,4,6,8,10]</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#square_numbers.py</span></span><br><span class="line"><span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    square = value ** <span class="number">2</span></span><br><span class="line">    squares.append(square)</span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[1,4,9.16,25,36,49,64,81,100]</span><br></pre></td></tr></table></figure></div>

<ol start="3">
<li>列表元素统计</li>
</ol>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;digits= [1,2,3,4,5,6,7,8,9,0]</span><br><span class="line">&gt;&gt;&gt;min(digits)</span><br><span class="line">0</span><br><span class="line">&gt;&gt;&gt;max(digits)</span><br><span class="line">9</span><br><span class="line">&gt;&gt;&gt;<span class="built_in">sum</span>(digits)</span><br><span class="line">45</span><br></pre></td></tr></table></figure></div>

<ol start="4">
<li><strong>列表推导式</strong></li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#square_numbers.py</span></span><br><span class="line">squares=[value**<span class="number">2</span> <span class="keyword">for</span> value <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">11</span>)]</span><br><span class="line"><span class="built_in">print</span>(squares)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[1,4,9.16,25,36,49,64,81,100]</span><br></pre></td></tr></table></figure></div>

<ol start="5">
<li><p><em><strong>切片(slice)</strong></em></p>
<p>​		创建切片，需要使用第一个元素和最后一个元素的索引，与range()函数一样，Python 在到达指定的第二个索引之前的元素时停止。要输出列表的前三个元素，要指定索引为0和3，将会返回索引分别为0，1，2的元素。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#players.py</span></span><br><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eil&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">0</span>:<span class="number">3</span>])</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;michael&#x27;</span>]</span><br></pre></td></tr></table></figure></div>

<p>​					如果需要提取列表的第二、三、四个元素，要指定索引为1和4</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#players.py</span></span><br><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eil&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">1</span>:<span class="number">4</span>])</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>]</span><br></pre></td></tr></table></figure></div>

<p>​					如若未指定第一个索引，Python将自动从列表开头开始</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#players.py</span></span><br><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eil&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[:<span class="number">4</span>])</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;charles&#x27;</span>,martina<span class="string">&#x27;,&#x27;</span>michael<span class="string">&#x27;,&#x27;</span>florence<span class="string">&#x27;]#注意没有到5，则为显示eil</span></span><br></pre></td></tr></table></figure></div>

<p>​					如若未指定结束索引，Python自动遍历至列表尾部</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#players.py</span></span><br><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eil&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(players[<span class="number">2</span>:])</span><br><span class="line"><span class="built_in">print</span>(players[-<span class="number">3</span>:])</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eil&#x27;</span>]</span><br><span class="line">[<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eil&#x27;</span>]</span><br></pre></td></tr></table></figure></div>

<ol start="6">
<li><p>遍历切片</p>
<p>​		遍历列表中的部分元素，在for循环中使用列表切片。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#players.py</span></span><br><span class="line">players = [<span class="string">&#x27;charles&#x27;</span>,<span class="string">&#x27;martina&#x27;</span>,<span class="string">&#x27;michael&#x27;</span>,<span class="string">&#x27;florence&#x27;</span>,<span class="string">&#x27;eil&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Here is the first three player on my team:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> player <span class="keyword">in</span> players[:<span class="number">3</span>]:<span class="comment">#只遍历前三名队员</span></span><br><span class="line">    <span class="built_in">print</span>(player.title())</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Here  is the first three player on my team:</span><br><span class="line">Charles</span><br><span class="line">Martina</span><br><span class="line">Michael</span><br></pre></td></tr></table></figure></div>

<ol start="7">
<li><p>复制列表</p>
<p>​		复制列表，可以创建一个包含整个列表的切片，方法是同时省略起始索引和终止索引([:])。让Python创建一个起始于第一个元素，终止于最后一个元素的切片，即复制整个列表。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#food.py</span></span><br><span class="line">my_foods=[<span class="string">&#x27;pizza&#x27;</span>,<span class="string">&#x27;falafel&#x27;</span>,<span class="string">&#x27;carrot cake&#x27;</span>]</span><br><span class="line">friend_foods=my_foods[:]<span class="comment">#[:]不能省略，此时是将my_foods的副本赋给friend_foods。</span></span><br><span class="line"><span class="comment">#如若是friend_foods=my_foods则是将my_foods赋值给friend_foods，两个指向同一个列表。</span></span><br><span class="line"></span><br><span class="line">my_foods.append(<span class="string">&#x27;cannoli&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My favorite foods are:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(my_foods)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My friend favorite foods are:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(friend_foods)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">My favorite foods are:</span><br><span class="line">[<span class="string">&#x27;pizza&#x27;</span>,<span class="string">&#x27;falafel&#x27;</span>,<span class="string">&#x27;carrot cake&#x27;</span>,<span class="string">&#x27;cannoli&#x27;</span>]</span><br><span class="line">My friend favorite foods are:</span><br><span class="line">[<span class="string">&#x27;pizza&#x27;</span>,<span class="string">&#x27;falafel&#x27;</span>,<span class="string">&#x27;carrot cake&#x27;</span>]</span><br></pre></td></tr></table></figure></div>
</blockquote>
<h3 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h3><blockquote>
<ol>
<li><p><strong>元组定义概念</strong></p>
<p>​		不可变的列表即为元组（tuple)</p>
</li>
<li><p>操作元组</p>
<ul>
<li><p>定义元组</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#dimensions.py</span></span><br><span class="line">dimensions = (<span class="number">200</span>,<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(dimensions[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(dimensions[<span class="number">1</span>])</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">200</span><br><span class="line">50</span><br></pre></td></tr></table></figure></div>
</li>
<li><p>​	遍历元组</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#dimensions.py</span></span><br><span class="line">dimensions =(<span class="number">200</span>,<span class="number">50</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line">    <span class="built_in">print</span>(dimension)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">200</span><br><span class="line">50</span><br></pre></td></tr></table></figure></div>

<ul>
<li><p>修改元组的值</p>
<p>​	元组的元素是无法被修改的，但是可以给表示元组的变量进行赋值，重新定义元组</p>
</li>
</ul>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#dimensions.py</span></span><br><span class="line">dimensions = (<span class="number">200</span>,<span class="number">50</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Orignal dimensions:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line">    <span class="built_in">print</span>(dimension)</span><br><span class="line">                    </span><br><span class="line">dimensions = (<span class="number">400</span>,<span class="number">100</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nModified dimensions:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> dimension <span class="keyword">in</span> dimensions:</span><br><span class="line">    <span class="built_in">print</span>(dimension)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Orignal dimensions:</span><br><span class="line">200</span><br><span class="line">50</span><br><span class="line">                    </span><br><span class="line">Modified dimensions:</span><br><span class="line">400</span><br><span class="line">100</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
</ol>
</blockquote>
<h2 id="条件判度if语句"><a href="#条件判度if语句" class="headerlink" title="条件判度if语句"></a>条件判度if语句</h2><h3 id="测试一个条件"><a href="#测试一个条件" class="headerlink" title="测试一个条件"></a>测试一个条件</h3><blockquote>
<p>只适用仅有一个条件满足的情况</p>
</blockquote>
<ul>
<li><p>if语句</p>
<blockquote>
<p>if 条件为true,执行后续程序；条件为false,跳出判断后续代码；</p>
</blockquote>
</li>
<li><p>if-else语句</p>
<blockquote>
<p>if条件为true,执行if后面程序，否则执行else后面程序</p>
</blockquote>
</li>
<li><p>if-elif-else语句</p>
<blockquote>
<p>if 条件为true，执行if后面程序，程序完成跳出条件判断，否则执行elif 判断条件，当条件为true时，执行elif后续程序，程序代码完成跳出判断，否则执行else后面程序代码，执行完成跳出条件判断</p>
</blockquote>
</li>
<li><p>if-elif-elif语句</p>
</li>
</ul>
<h3 id="测试多个条件"><a href="#测试多个条件" class="headerlink" title="测试多个条件"></a>测试多个条件</h3><blockquote>
<p>需要测试多个条件是否满足的情况</p>
</blockquote>
<ul>
<li>if-if-if</li>
</ul>
<h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><h3 id="概念定义-2"><a href="#概念定义-2" class="headerlink" title="概念定义"></a>概念定义</h3><blockquote>
<p>字典（dictionary)是一系列键值对。每一个键都与值关联，可以使用键来访问相关连的值。在Python中字典用放在花括号“{}”中的一系列键值对来表示的。</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#aline.py</span></span><br><span class="line">aline_0 = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;points&#x27;</span>:<span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(aline_0[<span class="string">&#x27;color&#x27;</span>])</span><br><span class="line">new_points = cline_0[<span class="string">&#x27;points&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;You just earned <span class="subst">&#123;new_points&#125;</span> points!&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">green</span><br><span class="line">You just earned 5 points!</span><br></pre></td></tr></table></figure></div>

<h3 id="添加键值对"><a href="#添加键值对" class="headerlink" title="添加键值对"></a>添加键值对</h3><blockquote>
<p>字典是一种动态结构，可以随时在其中添加键值对。需要依次指定字典名，用方括号括起来的键和键关联的值。字典会保留定义是的元素排列顺序。</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#alien.py</span></span><br><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;points&#x27;</span>:<span class="number">5</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br><span class="line"></span><br><span class="line">alien_0[<span class="string">&#x27;x_position&#x27;</span>] = <span class="number">0</span></span><br><span class="line">alien_0[<span class="string">&#x27;y_position&#x27;</span>] = <span class="number">25</span></span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;points&#x27;</span>:5&#125;</span><br><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;points&#x27;</span>:5,<span class="string">&#x27;x_position&#x27;</span>:0,<span class="string">&#x27;y_position&#x27;</span>:25&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>如果需要使用字典来存储用户提供的数据或编写能自动生成大量键值对的代码，通常先创建一个空字典。</p>
</blockquote>
<h3 id="修改字典中的值"><a href="#修改字典中的值" class="headerlink" title="修改字典中的值"></a>修改字典中的值</h3><blockquote>
<p> 要修改字典中的值，可一次指定字典中的键名，用方括号括起来的键和键关联的新值</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#alien.py</span></span><br><span class="line">alien_0 = &#123;<span class="string">&#x27;x_position&#x27;</span>:<span class="number">0</span>,<span class="string">&#x27;y_position&#x27;</span>:<span class="number">25</span>,<span class="string">&#x27;speed&#x27;</span>:<span class="string">&#x27;medium&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Orignal position:<span class="subst">&#123;alien_0[<span class="string">&#x27;x_position&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> alien_0[<span class="string">&#x27;speed&#x27;</span>] == <span class="string">&#x27;slow&#x27;</span>:</span><br><span class="line">	x_increment = <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span> alien_0[<span class="string">&#x27;speed&#x27;</span>] == <span class="string">&#x27;medium&#x27;</span></span><br><span class="line">	x_increment = <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	x_increment = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">alien_0[<span class="string">&#x27;x_position&#x27;</span>] = x_increment + alien_0[<span class="string">&#x27;x_position&#x27;</span>] </span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Now position:<span class="subst">&#123;alien_0[<span class="string">&#x27;x_position&#x27;</span>]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Orignal position:0</span><br><span class="line">Now position:2</span><br></pre></td></tr></table></figure></div>

<h3 id="删除键值对-del语句"><a href="#删除键值对-del语句" class="headerlink" title="删除键值对(del语句)"></a>删除键值对(del语句)</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#alien.py</span></span><br><span class="line">alien_0 = &#123;</span><br><span class="line">    <span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;position&#x27;</span>:<span class="number">5</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> alien_0[<span class="string">&#x27;position&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(alien_0)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;position&#x27;</span>:5&#125;</span><br><span class="line">&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>&#125;<span class="comment">#删除后将永久消失</span></span><br></pre></td></tr></table></figure></div>

<h3 id="使用get-访问值"><a href="#使用get-访问值" class="headerlink" title="使用get()访问值"></a>使用get()访问值</h3><p>使用方括号里的键从字典中获取感兴趣的值，可能会引发问题：当指定的键不存在，则会出现错误。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#alien.py</span></span><br><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,<span class="string">&#x27;speed&#x27;</span>:<span class="string">&#x27;slow&#x27;</span>&#125;</span><br><span class="line">print_value = alien_0.get(<span class="string">&#x27;points&#x27;</span>,<span class="string">&#x27;No point value assigned.&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(print_value)</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>如果字典中有键’points’，则获取键关联的值，否则将获取指定的默认值。</p>
<p>在调用get()函数时，如果没有指定第二个参数且指定的键不存在，则Python将放回None。</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">No point value asigned.</span><br></pre></td></tr></table></figure></div>

<h3 id="遍历字典"><a href="#遍历字典" class="headerlink" title="遍历字典"></a>遍历字典</h3><ol>
<li><strong>遍历所有的键值对</strong></li>
</ol>
<p>利用for 循环，借用两个变量分别保存键名和值，items()返回键-值对列表</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#user.pu</span></span><br><span class="line">user_0 =&#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;efermi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;first&#x27;</span>:<span class="string">&#x27;enrico&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;last&#x27;</span>:<span class="string">&#x27;fermi&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> key,value <span class="keyword">in</span> user_0.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n key:<span class="subst">&#123;key&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;\n value:<span class="subst">&#123;value&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">key: last</span><br><span class="line">Value: fermi</span><br><span class="line">Key: first</span><br><span class="line">Value: enrico</span><br><span class="line">Key: username</span><br><span class="line">Value: efermi</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>注意，即便遍历字典时，键—值对的返回顺序也与存储顺序不同。Python不关心键—值对的存<br>储顺序，而只跟踪键和值之间的关联关系。</p>
</blockquote>
<ol start="2">
<li><strong>遍历所有的键</strong></li>
</ol>
<blockquote>
<p>利用for 循环，用一个变量保存字典的键名，keys()</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#favorite_languages</span></span><br><span class="line">favorite_languages = &#123;</span><br><span class="line">    <span class="string">&#x27;jen&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sarah&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;edward&#x27;</span>: <span class="string">&#x27;ruby&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;phil&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> favorite_languages.keys():</span><br><span class="line">	<span class="built_in">print</span>(name.title())</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>提取字典favorite_languages中的所有键，并依次将它们存储到变量name中。输出列出了每个被调查者的名字：</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Jen</span><br><span class="line">Sarah</span><br><span class="line">Phil</span><br><span class="line">Edward</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>遍历字典时，会默认遍历所有的键.</p>
<p>因此，如果将上述代码中的for name in favorite_languages.keys():替换为for name in favorite_languages:，输出将不变。</p>
</blockquote>
<ul>
<li><p>按顺序遍历字典中的所有键</p>
<p>字典总是明确地记录键和值之间的关联关系，但获取字典的元素时，获取顺序是不可预测的。</p>
<p>要以特定的顺序返回元素，一种办法是在for循环中对返回的键进行排序。为此，可使用函<br>数sorted()来获得按特定顺序排列的键列表的副本：</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#favorite_languages.py</span></span><br><span class="line">favorite_languages = &#123;</span><br><span class="line">    <span class="string">&#x27;jen&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sarah&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;edward&#x27;</span>: <span class="string">&#x27;ruby&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;phil&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> <span class="built_in">sorted</span>(favorite_languages.keys()):</span><br><span class="line">	<span class="built_in">print</span>(name.title() + <span class="string">&quot;, thank you for taking the poll.&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<p>dictionary.keys()的结果调用了函数sorted()。这让Python列出字典中的所有键，并在遍历前对这个列表进行排序。输出表明，按顺序显示了所有被调查者的名字：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Edward, thank you <span class="keyword">for</span> taking the poll.</span><br><span class="line">Jen, thank you <span class="keyword">for</span> taking the poll.</span><br><span class="line">Phil, thank you <span class="keyword">for</span> taking the poll.</span><br><span class="line">Sarah, thank you <span class="keyword">for</span> taking the poll.</span><br></pre></td></tr></table></figure></div></li>
</ul>
<h3 id="遍历字典中的所有值"><a href="#遍历字典中的所有值" class="headerlink" title="遍历字典中的所有值"></a>遍历字典中的所有值</h3><p>利用for循环，用一个变量存储字典的值，values();set()集合，剔除重复项。</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#favorite_languages.py</span></span><br><span class="line">favorite_languages = &#123;</span><br><span class="line">    <span class="string">&#x27;jen&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sarah&#x27;</span>: <span class="string">&#x27;c&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;edward&#x27;</span>: <span class="string">&#x27;ruby&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;phil&#x27;</span>: <span class="string">&#x27;python&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;The following languages have been mentioned:&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> language <span class="keyword">in</span> <span class="built_in">set</span>(favorite_languages.values()):</span><br><span class="line">    <span class="comment">#为剔除重复项，可使用集合（set）。集合类似于列表，但每个元素都必须是独一无二的：</span></span><br><span class="line">    <span class="built_in">print</span>(language.title())</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">The following languages have been mentioned:</span><br><span class="line">Python</span><br><span class="line">C</span><br><span class="line">Ruby</span><br></pre></td></tr></table></figure></div>

<h2 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h2><blockquote>
<p>可以在列表中嵌套字典、在字典中嵌套列表，可以在字典中嵌套字典。</p>
</blockquote>
<h3 id="字典列表"><a href="#字典列表" class="headerlink" title="字典列表"></a>字典列表</h3><div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#alien.py</span></span><br><span class="line">alien_0 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>&#125;</span><br><span class="line">alien_1 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">10</span>&#125;</span><br><span class="line">alien_2 = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">15</span>&#125;</span><br><span class="line">aliens = [alien_0, alien_1, alien_2]</span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens:</span><br><span class="line">	<span class="built_in">print</span>(alien)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#x27;color&#x27;: &#x27;green&#x27;, &#x27;points&#x27;: 5&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;yellow&#x27;, &#x27;points&#x27;: 10&#125;</span><br><span class="line">&#123;&#x27;color&#x27;: &#x27;red&#x27;, &#x27;points&#x27;: 15&#125;</span><br></pre></td></tr></table></figure></div>

<p>将前三个外星人修改为黄色的、速度为中等且值10个点</p>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#alien.py</span></span><br><span class="line"><span class="comment"># 创建一个用于存储外星人的空列表</span></span><br><span class="line">aliens = []</span><br><span class="line"><span class="comment"># 创建30个绿色的外星人</span></span><br><span class="line"><span class="keyword">for</span> alien_number <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>):</span><br><span class="line"> new_alien = &#123;<span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;speed&#x27;</span>: <span class="string">&#x27;slow&#x27;</span>&#125;</span><br><span class="line"> aliens.append(new_alien)</span><br><span class="line"><span class="comment">#将前三个外星人修改为黄色的、速度为中等且值10个点</span></span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens[<span class="number">0</span>:<span class="number">3</span>]:</span><br><span class="line">    <span class="keyword">if</span> alien[<span class="string">&#x27;color&#x27;</span>] == <span class="string">&#x27;green&#x27;</span>:</span><br><span class="line">        alien[<span class="string">&#x27;color&#x27;</span>] = <span class="string">&#x27;yellow&#x27;</span></span><br><span class="line">        alien[<span class="string">&#x27;speed&#x27;</span>] = <span class="string">&#x27;medium&#x27;</span></span><br><span class="line">        alien[<span class="string">&#x27;points&#x27;</span>] = <span class="number">10</span></span><br><span class="line"><span class="comment"># 显示前五个外星人</span></span><br><span class="line"><span class="keyword">for</span> alien <span class="keyword">in</span> aliens[:<span class="number">5</span>]:</span><br><span class="line">    <span class="built_in">print</span>(alien)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;...&quot;</span>)</span><br><span class="line"><span class="comment"># 显示创建了多少个外星人</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Total number of aliens: &quot;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(aliens)))</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;speed&#x27;</span>: <span class="string">&#x27;medium&#x27;</span>, <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: 10&#125;</span><br><span class="line">&#123;<span class="string">&#x27;speed&#x27;</span>: <span class="string">&#x27;medium&#x27;</span>, <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: 10&#125;</span><br><span class="line">&#123;<span class="string">&#x27;speed&#x27;</span>: <span class="string">&#x27;medium&#x27;</span>, <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;yellow&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: 10&#125;</span><br><span class="line">&#123;<span class="string">&#x27;speed&#x27;</span>: <span class="string">&#x27;slow&#x27;</span>, <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: 5&#125;</span><br><span class="line">&#123;<span class="string">&#x27;speed&#x27;</span>: <span class="string">&#x27;slow&#x27;</span>, <span class="string">&#x27;color&#x27;</span>: <span class="string">&#x27;green&#x27;</span>, <span class="string">&#x27;points&#x27;</span>: 5&#125;</span><br><span class="line">...</span><br><span class="line">Total number of aliens: 30</span><br></pre></td></tr></table></figure></div>

<h3 id="字典中存储列表"><a href="#字典中存储列表" class="headerlink" title="字典中存储列表"></a>字典中存储列表</h3><blockquote>
<p>在字典中将一个键关联到多个值时，可以在字典中嵌套一个列表.</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Pizza.py</span></span><br><span class="line"><span class="comment"># 存储所点比萨的信息</span></span><br><span class="line"> pizza = &#123;</span><br><span class="line"><span class="string">&#x27;crust&#x27;</span>: <span class="string">&#x27;thick&#x27;</span>,<span class="comment">#薄厚程度</span></span><br><span class="line"><span class="string">&#x27;toppings&#x27;</span>: [<span class="string">&#x27;mushrooms&#x27;</span>, <span class="string">&#x27;extra cheese&#x27;</span>],<span class="comment">#顾客要求添加的所有配料</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 概述所点的比萨</span></span><br><span class="line"> <span class="built_in">print</span>(<span class="string">&quot;You ordered a &quot;</span> + pizza[<span class="string">&#x27;crust&#x27;</span>] + <span class="string">&quot;-crust pizza &quot;</span> +</span><br><span class="line"><span class="string">&quot;with the following toppings:&quot;</span>)</span><br><span class="line"> <span class="keyword">for</span> topping <span class="keyword">in</span> pizza[<span class="string">&#x27;toppings&#x27;</span>]:</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span> + topping)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">You ordered a thick-crust pizza with the following toppings:</span><br><span class="line">    mushrooms</span><br><span class="line">    extra cheese</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#favorite_languages.py</span></span><br><span class="line">favorite_languages = &#123;</span><br><span class="line">    <span class="string">&#x27;jen&#x27;</span>: [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;ruby&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;sarah&#x27;</span>: [<span class="string">&#x27;c&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;edward&#x27;</span>: [<span class="string">&#x27;ruby&#x27;</span>, <span class="string">&#x27;go&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;phil&#x27;</span>: [<span class="string">&#x27;python&#x27;</span>, <span class="string">&#x27;haskell&#x27;</span>],</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> name, languages <span class="keyword">in</span> favorite_languages.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n&quot;</span> + name.title() + <span class="string">&quot;&#x27;s favorite languages are:&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> language <span class="keyword">in</span> languages:</span><br><span class="line">		<span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span> + language.title())</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Jen<span class="string">&#x27;s favorite languages are:</span></span><br><span class="line"><span class="string">    Python</span></span><br><span class="line"><span class="string">    Ruby</span></span><br><span class="line"><span class="string">Sarah&#x27;</span>s favorite languages are:</span><br><span class="line">    C</span><br><span class="line">Phil<span class="string">&#x27;s favorite languages are:</span></span><br><span class="line"><span class="string">    Python</span></span><br><span class="line"><span class="string">    Haskell</span></span><br><span class="line"><span class="string">Edward&#x27;</span>s favorite languages are:</span><br><span class="line">    Ruby</span><br><span class="line">    Go</span><br></pre></td></tr></table></figure></div>

<h3 id="字典中存储字典"><a href="#字典中存储字典" class="headerlink" title="字典中存储字典"></a>字典中存储字典</h3><blockquote>
<p>例如，如果有多个网站用户，每个都有独特的用户名，可在字典中将用户名作为键，然后将每位用户的信息存储在一个字典中，并将该字典作为与用户名相关联的值。在下面的程序中，对于每位用户，我们都存储了其三项信息：名、姓和居地；为访问这些信息，我们遍历所有的用户名，并访问与每个用户名相关联的信息字典：</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#many_users.py</span></span><br><span class="line">users = &#123;</span><br><span class="line">    <span class="string">&#x27;aeinstein&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;albert&#x27;</span>,<span class="comment">#名字</span></span><br><span class="line">        <span class="string">&#x27;last&#x27;</span>: <span class="string">&#x27;einstein&#x27;</span>,<span class="comment">#姓氏</span></span><br><span class="line">        <span class="string">&#x27;location&#x27;</span>: <span class="string">&#x27;princeton&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&#x27;mcurie&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;first&#x27;</span>: <span class="string">&#x27;marie&#x27;</span>,<span class="comment">#名字</span></span><br><span class="line">        <span class="string">&#x27;last&#x27;</span>: <span class="string">&#x27;curie&#x27;</span>,<span class="comment">#姓氏</span></span><br><span class="line">        <span class="string">&#x27;location&#x27;</span>: <span class="string">&#x27;paris&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> username, user_info <span class="keyword">in</span> users.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nUsername: &quot;</span> + username)</span><br><span class="line">    full_name = user_info[<span class="string">&#x27;first&#x27;</span>] + <span class="string">&quot; &quot;</span> + user_info[<span class="string">&#x27;last&#x27;</span>]</span><br><span class="line">    location = user_info[<span class="string">&#x27;location&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\tFull name: &quot;</span> + full_name.title())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\tLocation: &quot;</span> + location.title())</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Username: aeinstein</span><br><span class="line">    Full name: Albert Einstein</span><br><span class="line">    Location: Princeton</span><br><span class="line">Username: mcurie</span><br><span class="line">    Full name: Marie Curie</span><br><span class="line">    Location: Paris</span><br></pre></td></tr></table></figure></div>

<h2 id="用户输入"><a href="#用户输入" class="headerlink" title="用户输入"></a>用户输入</h2><h3 id="文本输入input-函数"><a href="#文本输入input-函数" class="headerlink" title="文本输入input()函数"></a>文本输入input()函数</h3><blockquote>
<p><strong>函数input()让程序暂停运行，等待用户输入一些文本。获取用户输入Python将其存储在一个变量中。<u>input()函数获取的将被视为字符串，即使输入的文本为数字，也将以字符串的形式存储。</u></strong></p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#greeter.py</span></span><br><span class="line">prompt = <span class="string">&quot;If you tell us who you are, we can personalize the messages you see.&quot;</span></span><br><span class="line"><span class="comment">#运算符+=在存储在prompt中的字符串末尾附加一个字符串。</span></span><br><span class="line">prompt += <span class="string">&quot;\nWhat is your first name? &quot;</span></span><br><span class="line">name = <span class="built_in">input</span>(prompt)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nHello, &quot;</span> + name + <span class="string">&quot;!&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">If you tell us <span class="built_in">who</span> you are, we can personalize the messages you see.</span><br><span class="line">What is your first name? Eric</span><br><span class="line"></span><br><span class="line">Hello, Eric!</span><br></pre></td></tr></table></figure></div>

<h3 id="获取数值输入int-函数"><a href="#获取数值输入int-函数" class="headerlink" title="获取数值输入int()函数"></a>获取数值输入int()函数</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; age = input(<span class="string">&quot;How old are you? &quot;</span>)</span><br><span class="line">How old are you? 21</span><br><span class="line">&gt;&gt;&gt; age</span><br><span class="line"><span class="string">&#x27;21&#x27;</span><span class="comment">#返回的是&#x27;21&#x27;——用户输入的数值的字符串表示。</span></span><br><span class="line">&gt;&gt;&gt; age &gt;= 18</span><br><span class="line">Traceback (most recent call last):<span class="comment">#报错提示</span></span><br><span class="line">	File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line 1, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">TypeError: unorderable types: str() &gt;= int()</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><u>Traceback (most recent call last):#报错提示</u></p>
<p><u><strong>TypeError: unorderable types: str() &gt;&#x3D; int()</strong></u></p>
<p>无法将字符串和整数进行比较：不能将存储在age中的字符串’21’与数值18进行比较</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; age = input(<span class="string">&quot;How old are you? &quot;</span>)</span><br><span class="line">How old are you? 21</span><br><span class="line">&gt;&gt;&gt; age = int(age)<span class="comment">#int()函数将字符串强制转换成数值</span></span><br><span class="line">&gt;&gt;&gt; age &gt;= 18</span><br><span class="line">True</span><br></pre></td></tr></table></figure></div>

<h3 id="求模运算-取余运算"><a href="#求模运算-取余运算" class="headerlink" title="求模运算(%)[取余运算]"></a>求模运算(%)[取余运算]</h3><blockquote>
<p>求模运算符（%）是一个很有用的工具，它将两个数相除并返回<u><strong>余数</strong></u>：</p>
</blockquote>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt; 4 % 3</span><br><span class="line">1</span><br><span class="line">&gt;&gt;&gt; 5 % 3</span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; 6 % 3</span><br><span class="line">0</span><br><span class="line">&gt;&gt;&gt; 7 % 3</span><br><span class="line">1</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>如果一个数可被另一个数整除，余数就为0，因此求模运算符将返回0。你可利用这一点来判<br>断一个数是奇数还是偶数：</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#even_or_odd.py</span></span><br><span class="line">number = <span class="built_in">input</span>(<span class="string">&quot;Enter a number, and I&#x27;ll tell you if it&#x27;s even or odd: &quot;</span>)</span><br><span class="line">number = <span class="built_in">int</span>(number)</span><br><span class="line"><span class="keyword">if</span> number % <span class="number">2</span> == <span class="number">0</span>:<span class="comment">#偶数</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nThe number &quot;</span> + <span class="built_in">str</span>(number) + <span class="string">&quot; is even.&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:<span class="comment">#奇数</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\nThe number &quot;</span> + <span class="built_in">str</span>(number) + <span class="string">&quot; is odd.&quot;</span>)</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">Enter a number, and I<span class="string">&#x27;ll tell you if it&#x27;</span>s even or odd: 42</span><br><span class="line">The number 42 is even.</span><br></pre></td></tr></table></figure></div>

<h2 id="While-循环"><a href="#While-循环" class="headerlink" title="While()循环"></a>While()循环</h2><blockquote>
<p>for循环用于针对集合中的每个元素都一个代码块，而while循环不断地运行，直到指定的条<br>件不满足为止。</p>
</blockquote>
<div class="highlight-container" data-rel="Python"><figure class="iseeu highlight python"><table><tr><td class="code"><pre><span class="line">current_number = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> current_number &lt;= <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(current_number,end=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    current_number += <span class="number">1</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">1,2,3,4,5</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>Languages</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>Learn</tag>
        <tag>笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>C++小型公司工资管理系统</title>
    <url>/2024/01/17/%E5%B0%8F%E5%9E%8B%E5%85%AC%E5%8F%B8%E5%B7%A5%E8%B5%84%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9Fcpp/</url>
    <content><![CDATA[<h2 id="课题要求"><a href="#课题要求" class="headerlink" title="课题要求"></a>课题要求</h2><p><em><strong>“小型公司工资管理系统设计”</strong></em></p>
<p><strong>1</strong>、<strong>问题描述</strong></p>
<p><strong>某公司需要存储雇员的编号、姓名、性别、所在部门，级别，并进行工资的计算。其中，雇员分为经理、技术人员、销售人员和销售经理。四类人员的月薪计算方法如下：经理拿固定月薪；技术人员按小时领取月薪；销售人员按其当月销售额的提成领取工资；销售经理既拿固定月薪也领取销售提成。</strong></p>
<p><strong>设计一程序能够对公司人员进行管理，应用到继承、抽象类、虚函数、虚基类、多态和文件的输入&#x2F;输出等内容。</strong></p>
<p><strong>2</strong>、<strong>功能要求</strong></p>
<p><strong>（1）添加功能：程序能够任意添加上述四类人员的记录，可提供选择界面供用户选择所要添加的人员类别，要求员工的编号要唯一，如果添加了重复编号的记录时，则提示数据添加重复并取消添加。</strong></p>
<p><strong>（2）查询功能：可根据编号、姓名等信息对已添加的记录进行查询，如果未找到，给出相应的提示信息，如果找到，则显示相应的记录信息；</strong></p>
<p><strong>（3）显示功能：可显示当前系统中所有记录，每条记录占据一行。</strong></p>
<p><strong>（4）编辑功能：可根据查询结果对相应的记录进行修改，修改时注意编号的唯一性。</strong></p>
<p><strong>（5）删除功能：主要实现对已添加的人员记录进行删除。如果当前系统中没有相应的人员记录，则提示“记录为空！”并返回操作；否则，输入要删除的人员的编号或姓名，根据所输入的信息删除该人员记录，如果没有找到该人员信息，则提示相应的记录不存。</strong></p>
<p><strong>（6）统计功能：能根据多种参数进行人员的统计。例如，统计四类人员数量以及总数，</strong></p>
<p><strong>或者统计男、女员工的数量，或者统计平均工资、最高工资、最低工资等信息。</strong></p>
<p><strong>（7）保存功能：可将当前系统中各类人员记录存入文件中，存入方式任意。</strong></p>
<p><strong>（8）读取功能：可将保存在文件中的人员信息读入到当前系统中，供用户进行使用。</strong></p>
<p><strong>3</strong>、<strong>问题的解决方案</strong></p>
<p><strong>根据系统功能要求，可以将问题解决分为以下步骤：</strong></p>
<p><strong>（1）应用系统分析，建立该系统的功能模块框图以及界面的组织和设计；</strong></p>
<p><strong>（2）分析系统中的各个实体及它们之间的关系；</strong></p>
<p><strong>（3）根据问题描述，设计系统的类层次；</strong></p>
<p><strong>（4）完成类层次中各个类的描述；</strong></p>
<p><strong>（5）完成类中各个成员函数的定义；</strong></p>
<p><strong>（6）完成系统的应用模块；</strong></p>
<p><strong>（7）功能调试；</strong></p>
<p><strong>（8）完成系统总结报告。</strong></p>
<h2 id="main-cpp"><a href="#main-cpp" class="headerlink" title="main.cpp"></a>main.cpp</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">init_list</span>();</span><br><span class="line">	<span class="built_in">load</span>();</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">	<span class="built_in">menu</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="employee-h"><a href="#employee-h" class="headerlink" title="employee.h"></a>employee.h</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employee_base</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">Employee_base</span>();</span><br><span class="line">	<span class="built_in">Employee_base</span>(<span class="type">int</span> i, string n, string g, string d, string l, <span class="type">double</span> s,string t) :<span class="built_in">id</span>(i), <span class="built_in">name</span>(n), <span class="built_in">gender</span>(g), <span class="built_in">department</span>(d), <span class="built_in">level</span>(l), <span class="built_in">Salary</span>(s),<span class="built_in">type</span>(t) &#123;&#125;;</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="type">double</span> <span class="title">calculateSalary</span><span class="params">()</span> <span class="type">const</span> </span>= <span class="number">0</span>;</span><br><span class="line">	<span class="function"><span class="type">int</span> <span class="title">getId</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">string <span class="title">getname</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">string <span class="title">getgender</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">string <span class="title">getdepartment</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">string <span class="title">getlevel</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="type">double</span> <span class="title">getsalary</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function">string <span class="title">gettype</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="type">int</span> id;<span class="comment">//编号</span></span><br><span class="line">	string name;<span class="comment">//姓名</span></span><br><span class="line">	string gender;<span class="comment">//性别</span></span><br><span class="line">	string department;<span class="comment">//部门</span></span><br><span class="line">	string level;<span class="comment">//级别</span></span><br><span class="line">	<span class="type">double</span> Salary;</span><br><span class="line">	string type;<span class="comment">//类型</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Manager</span>:<span class="keyword">virtual</span> <span class="keyword">public</span> Employee_base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">Manager</span>();</span><br><span class="line">	<span class="built_in">Manager</span>(<span class="type">int</span> i, string n, string g, string d, string l, <span class="type">double</span> s,<span class="type">double</span> m,string t) :<span class="built_in">Employee_base</span>(i,n,g,d,l,s,t),<span class="built_in">MonthSalary</span>(m)&#123;&#125;</span><br><span class="line">	<span class="function"><span class="type">double</span> <span class="title">calculateSalary</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">addmanager</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="type">double</span> MonthSalary;<span class="comment">//月薪</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Salesperson</span> :<span class="keyword">virtual</span> <span class="keyword">public</span> Employee_base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">Salesperson</span>();</span><br><span class="line">	<span class="built_in">Salesperson</span>(<span class="type">int</span> i, string n, string g, string d, string l, <span class="type">double</span> s,<span class="type">double</span> sa,<span class="type">double</span> c,string t) :<span class="built_in">Employee_base</span>(i, n, g, d, l, s,t) ,<span class="built_in">SalesAmount</span>(sa),<span class="built_in">commision</span>(c)&#123;&#125;</span><br><span class="line">	<span class="function"><span class="type">double</span> <span class="title">calculateSalary</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">addsalesperson</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="type">double</span> SalesAmount;<span class="comment">//销售额</span></span><br><span class="line">	<span class="type">double</span> commision;<span class="comment">//提成率</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SalesManager</span> :<span class="keyword">virtual</span> <span class="keyword">public</span> Employee_base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">SalesManager</span>();</span><br><span class="line">	<span class="built_in">SalesManager</span>(<span class="type">int</span> i, string n, string g, string d, string l, <span class="type">double</span> s,<span class="type">double</span> m,<span class="type">double</span> sa,<span class="type">double</span> c,string t) :<span class="built_in">Employee_base</span>(i, n, g, d, l, s,t),<span class="built_in">MonthSalary</span>(m),<span class="built_in">SalesAmount</span>(sa),<span class="built_in">commision</span>(c) &#123;&#125;</span><br><span class="line">	<span class="function"><span class="type">double</span> <span class="title">calculateSalary</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">addsalesmanager</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="type">double</span> MonthSalary;</span><br><span class="line">	<span class="type">double</span> SalesAmount;</span><br><span class="line">	<span class="type">double</span> commision;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Technician</span> :<span class="keyword">virtual</span> <span class="keyword">public</span> Employee_base</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">Technician</span>();</span><br><span class="line">	<span class="built_in">Technician</span>(<span class="type">int</span> i, string n, string g, string d, string l, <span class="type">double</span> s,<span class="type">double</span> t,<span class="type">double</span> h,string ty) :<span class="built_in">Employee_base</span>(i, n, g, d, l, s,ty),<span class="built_in">time</span>(t),<span class="built_in">hourlyWage</span>(h)&#123;&#125;</span><br><span class="line">	<span class="function"><span class="type">double</span> <span class="title">calculateSalary</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">addtechnician</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="type">double</span> time;<span class="comment">//工作时间</span></span><br><span class="line">	<span class="type">double</span> hourlyWage;<span class="comment">//时薪</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Employees</span>:<span class="keyword">virtual</span> <span class="keyword">public</span> Manager, <span class="keyword">virtual</span> <span class="keyword">public</span> Salesperson, <span class="keyword">virtual</span> <span class="keyword">public</span> SalesManager, <span class="keyword">virtual</span> <span class="keyword">public</span> Technician</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">add_employee</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="type">double</span> <span class="title">calculateSalary</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">showEmployees</span><span class="params">()</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">modifyname</span><span class="params">()</span></span>;<span class="comment">//修改姓名</span></span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">modifygender</span><span class="params">()</span></span>;<span class="comment">//修改性别</span></span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">modifydepartment</span><span class="params">()</span></span>;<span class="comment">//修改部门</span></span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">modifylevel</span><span class="params">()</span></span>;<span class="comment">//修改级别</span></span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">modifysalary</span><span class="params">()</span></span>;<span class="comment">//修改工资</span></span><br><span class="line">	<span class="function"><span class="type">void</span>  <span class="title">saveid</span><span class="params">(<span class="type">int</span> Id)</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span>  <span class="title">savename</span><span class="params">(string Name)</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span>  <span class="title">savegender</span><span class="params">(string gender)</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span>  <span class="title">savedepartment</span><span class="params">(string department)</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span>  <span class="title">savelevel</span><span class="params">(string level)</span></span>;</span><br><span class="line">	<span class="function"><span class="type">void</span>  <span class="title">savesalary</span><span class="params">(<span class="type">double</span> salary)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">Node</span></span><br><span class="line">&#123;</span><br><span class="line">	Manager m;</span><br><span class="line">	Salesperson	s;</span><br><span class="line">	SalesManager sm;</span><br><span class="line">	Technician t;</span><br><span class="line">	Employees e;</span><br><span class="line">	Node* next;</span><br><span class="line">&#125;Node,*Linklist;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Ide</span><span class="params">(<span class="type">int</span> Id)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">listlength</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clear_buffer</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init_list</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add_employee</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">query_employee</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display_all</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify_employee</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">delete_employee</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">static_employee</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">save</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">load</span><span class="params">()</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h2 id="employee-cpp"><a href="#employee-cpp" class="headerlink" title="employee.cpp"></a>employee.cpp</h2><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&quot;employee.h&quot;</span></span></span><br><span class="line">Linklist head = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*基类抽象函数*/</span></span><br><span class="line">Employee_base::<span class="built_in">Employee_base</span>()</span><br><span class="line">&#123;</span><br><span class="line">	id = <span class="literal">NULL</span>;</span><br><span class="line">	name = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	gender = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	department = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	level = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	Salary = <span class="literal">NULL</span>;</span><br><span class="line">	type = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Employee_base::getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee_base::getname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee_base::getgender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee_base::getdepartment</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> department;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee_base::getlevel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Employee_base::getsalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//Salary = calculateSalary();</span></span><br><span class="line">	<span class="keyword">return</span> Salary;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">string <span class="title">Employee_base::gettype</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> type;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*派生类构造函数*/</span></span><br><span class="line">Manager::<span class="built_in">Manager</span>()</span><br><span class="line">&#123;</span><br><span class="line">	id = <span class="literal">NULL</span>;</span><br><span class="line">	name = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	gender = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	department = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	level = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	Salary = <span class="literal">NULL</span>;</span><br><span class="line">	MonthSalary = <span class="literal">NULL</span>;</span><br><span class="line">	type = <span class="string">&quot;经理&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Salesperson::<span class="built_in">Salesperson</span>()</span><br><span class="line">&#123;</span><br><span class="line">	id = <span class="literal">NULL</span>;</span><br><span class="line">	name = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	gender = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	department = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	level = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	Salary = <span class="literal">NULL</span>;</span><br><span class="line">	SalesAmount = <span class="literal">NULL</span>;</span><br><span class="line">	commision = <span class="literal">NULL</span>;</span><br><span class="line">	type = <span class="string">&quot;销售人员&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">SalesManager::<span class="built_in">SalesManager</span>()</span><br><span class="line">&#123;</span><br><span class="line">	id = <span class="literal">NULL</span>;</span><br><span class="line">	name = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	gender = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	department = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	level = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	Salary = <span class="literal">NULL</span>;</span><br><span class="line">	MonthSalary = <span class="literal">NULL</span>;</span><br><span class="line">	SalesAmount = <span class="literal">NULL</span>;</span><br><span class="line">	commision = <span class="literal">NULL</span>;</span><br><span class="line">	type = <span class="string">&quot;销售经理&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Technician::<span class="built_in">Technician</span>()</span><br><span class="line">&#123;</span><br><span class="line">	id = <span class="literal">NULL</span>;</span><br><span class="line">	name = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	gender = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	department = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	level = <span class="string">&quot;NULL&quot;</span>;</span><br><span class="line">	Salary = <span class="literal">NULL</span>;</span><br><span class="line">	time = <span class="literal">NULL</span>;</span><br><span class="line">	hourlyWage = <span class="literal">NULL</span>;</span><br><span class="line">	type = <span class="string">&quot;技术人员&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*派生类成员添加函数*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Manager::addmanager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> Id;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入经理编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; Id;</span><br><span class="line">	id=<span class="built_in">Ide</span>(Id);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入经理姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; name;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入经理性别【男|女】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; gender;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入经理部门【销售部、技术部、人事部】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; department;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入经理级别【初级、中级、高级】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; level;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入经理的月薪：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; MonthSalary;</span><br><span class="line">	Salary = MonthSalary;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Salesperson::addsalesperson</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> Id;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售人员编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; Id;</span><br><span class="line">	id = <span class="built_in">Ide</span>(Id);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售人员姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; name;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售人员性别【男|女】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; gender;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售人员部门【销售部、技术部、人事部】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; department;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售人员级别【初级、中级、高级】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; level;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售人员销售额：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; SalesAmount;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售人员提成率：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; commision;</span><br><span class="line">	Salary = SalesAmount * commision;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SalesManager::addsalesmanager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> Id;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; Id;</span><br><span class="line">	id = <span class="built_in">Ide</span>(Id);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; name;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理性别【男|女】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; gender;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理部门【销售部、技术部、人事部】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; department;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理级别【初级、中级、高级】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; level;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理的月薪：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; MonthSalary;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理销售额：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; SalesAmount;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入销售经理提成率：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; commision;</span><br><span class="line">	Salary = (SalesAmount * commision)+ MonthSalary;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Technician::addtechnician</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> Id;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入技术人员编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; Id;</span><br><span class="line">	id = <span class="built_in">Ide</span>(Id);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入技术人员姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; name;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入技术人员性别【男|女】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; gender;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入技术人员部门【销售部、技术部、人事部】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; department;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入技术人员级别【初级、中级、高级】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; level;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入技术人员的时薪：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; hourlyWage;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入技术人员的工作时间：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; time;</span><br><span class="line">	Salary = time * hourlyWage;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::add_employee</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> Id;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入员工编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; Id;</span><br><span class="line">	id = <span class="built_in">Ide</span>(Id);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入员工姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; name;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入员工性别【男|女】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; gender;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入员工部门【销售部、技术部、人事部】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; department;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入员工级别【初级、中级、高级】：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*派生类工资计算函数*/</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Manager::calculateSalary</span><span class="params">()</span><span class="type">const</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> MonthSalary;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Salesperson::calculateSalary</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> SalesAmount * commision;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">SalesManager::calculateSalary</span><span class="params">()</span> <span class="type">const</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (SalesAmount * commision) + MonthSalary;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Technician::calculateSalary</span><span class="params">()</span><span class="type">const</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> hourlyWage * time;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Employees功能函数</span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">Employees::calculateSalary</span><span class="params">()</span><span class="type">const</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (type == <span class="string">&quot;经理&quot;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> Manager::<span class="built_in">calculateSalary</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (type == <span class="string">&quot;销售人员&quot;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> Salesperson::<span class="built_in">calculateSalary</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (type == <span class="string">&quot;销售经理&quot;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> SalesManager::<span class="built_in">calculateSalary</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (type == <span class="string">&quot;技术人员&quot;</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> Technician::<span class="built_in">calculateSalary</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::showEmployees</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; id &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; gender &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; department &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; level &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; Salary &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::modifyname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入需要修改的姓名：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">Employees::modifygender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; gender;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入需要修改的性别：&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">Employees::modifydepartment</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入需要调换的部门：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; department;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">Employees::modifylevel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入需要更新的级别：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">Employees::modifysalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入修改后工资：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; Salary;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Employees保存函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::saveid</span><span class="params">( <span class="type">int</span> Id)</span> </span>&#123;</span><br><span class="line">	id = Id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span>  <span class="title">Employees::savename</span><span class="params">(string Name)</span> </span>&#123;</span><br><span class="line">	name = Name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::savegender</span><span class="params">(string Gender)</span> </span>&#123;</span><br><span class="line">	gender = Gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::savedepartment</span><span class="params">(string Department)</span> </span>&#123;</span><br><span class="line">	department = Department;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::savelevel</span><span class="params">(string Level)</span> </span>&#123;</span><br><span class="line">	level = Level;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Employees::savesalary</span><span class="params">(<span class="type">double</span> salary)</span> </span>&#123;</span><br><span class="line">	Salary = salary;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*功能函数*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">listlength</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> length=<span class="number">0</span>;</span><br><span class="line">	Linklist current = head-&gt;next;</span><br><span class="line">	<span class="keyword">while</span> (current != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		length++;</span><br><span class="line">		current = current-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init_list</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	head = <span class="keyword">new</span> Node;</span><br><span class="line">	head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clear_buffer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> ch;</span><br><span class="line">	<span class="keyword">while</span> ((ch = <span class="built_in">getchar</span>()) != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; ch != EOF);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> choose;</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t╔═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╗&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖          &lt;小型公司工资管理系统设计&gt;           ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              1.  添加职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              2.  查询职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              3.  显示职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              4.  编辑职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              5.  删除职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              6.  统计职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              7.  保存职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              8.  读取职工信息                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖              0.  结束进程                     ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t╚═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╝&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t请输入数字执行对应的功能:&quot;</span>;</span><br><span class="line">		choose = <span class="built_in">getchar</span>();</span><br><span class="line">		<span class="built_in">clear_buffer</span>();</span><br><span class="line">		<span class="keyword">switch</span> (choose)</span><br><span class="line">		&#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: &#123;<span class="comment">//添加职员信息</span></span><br><span class="line">			<span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">			<span class="built_in">add_employee</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: &#123;<span class="comment">//查询职工信息</span></span><br><span class="line">			<span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">			<span class="built_in">query_employee</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: &#123;<span class="comment">//显示职工信息</span></span><br><span class="line">			<span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">			<span class="built_in">display_all</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: &#123;<span class="comment">//编辑员工信息</span></span><br><span class="line">			<span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">			<span class="built_in">modify_employee</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>: &#123;<span class="comment">//删除员工信息</span></span><br><span class="line">			<span class="built_in">delete_employee</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>: &#123;<span class="comment">//统计员工信息</span></span><br><span class="line">			<span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">			<span class="built_in">static_employee</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;7&#x27;</span>: &#123;<span class="comment">//保存员工信息</span></span><br><span class="line">			<span class="built_in">save</span>();</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;\t\t\t\t保存成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;8&#x27;</span>: &#123;<span class="comment">//读取员工信息</span></span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;读取成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">			<span class="built_in">load</span>();</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>: &#123;<span class="comment">//退出</span></span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;\t\t\t\t**********退出成功！**********&quot;</span> &lt;&lt; endl;</span><br><span class="line">			<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">clear_buffer</span>();</span><br><span class="line">		<span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">		<span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Ide</span><span class="params">(<span class="type">int</span> Id)</span></span>&#123;</span><br><span class="line">	Linklist temp = head-&gt;next;</span><br><span class="line">	<span class="keyword">while</span> (temp != <span class="literal">NULL</span>) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(temp-&gt;e.<span class="built_in">getId</span>() == Id)</span><br><span class="line">		&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;该编号已存在！请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cin &gt;&gt; Id;</span><br><span class="line">		&#125;</span><br><span class="line">		temp = temp-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> Id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add_employee</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> choose;</span><br><span class="line">	Linklist current, newNode = <span class="keyword">new</span> Node;</span><br><span class="line">	newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	&#123;<span class="comment">//添加职工信息</span></span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t╔═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╗&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                ****人员类型****               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                1、经理                        ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                2、销售人员                    ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                3、销售经理                    ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                4、技术人员                    ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                0、返回主菜单                  ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t╚═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╝&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t请输入数字选择需要添加的人员类型:&quot;</span>;</span><br><span class="line">		choose = <span class="built_in">getchar</span>();</span><br><span class="line">		<span class="built_in">clear_buffer</span>();</span><br><span class="line">		<span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">		<span class="keyword">switch</span> (choose) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: &#123;<span class="comment">//添加经理</span></span><br><span class="line">				newNode-&gt;e.<span class="built_in">addmanager</span>();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>: &#123;<span class="comment">//添加销售人员</span></span><br><span class="line">				newNode-&gt;e.<span class="built_in">addsalesperson</span>();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>: &#123;<span class="comment">//添加销售经理</span></span><br><span class="line">				newNode-&gt;e.<span class="built_in">addsalesmanager</span>();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>: &#123;<span class="comment">//添加技术人员</span></span><br><span class="line">				newNode-&gt;e.<span class="built_in">addtechnician</span>();</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;0&#x27;</span>:<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">default</span>: &#123;</span><br><span class="line">				cout &lt;&lt; <span class="string">&quot;无效的选择！\n&quot;</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (head-&gt;next == <span class="literal">NULL</span>) &#123;</span><br><span class="line">			head-&gt;next = newNode;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> &#123;</span><br><span class="line">			current = head-&gt;next;</span><br><span class="line">			<span class="keyword">while</span> (current-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				current = current-&gt;next;</span><br><span class="line">			&#125;</span><br><span class="line">			current-&gt;next = newNode;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">save</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">query_employee</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> queryid;</span><br><span class="line">	string queryname;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">	<span class="type">char</span> input = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	Linklist current = head-&gt;next;</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t╔═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╗&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖       ****公司员工工资信息查询系统****        ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖            请选择您的查询方式                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                1、编号查询                    ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                2、姓名查询                    ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                0、返回主菜单                  ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t╚═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╝&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t请输入数字选择查询的方式:&quot;</span>;</span><br><span class="line">	cin &gt;&gt; input;</span><br><span class="line">	<span class="built_in">clear_buffer</span>();</span><br><span class="line">	<span class="keyword">if</span> (input == <span class="string">&#x27;1&#x27;</span>) &#123;<span class="comment">//按编号查询</span></span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t请输入需要查询的员工编号:&quot;</span>;</span><br><span class="line">		cin &gt;&gt; queryid;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t========================================================================================&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;性别&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;部门&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;级别&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;工资&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">while</span> (current != <span class="literal">NULL</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">getId</span>() == queryid) &#123;</span><br><span class="line">				current-&gt;e.<span class="built_in">showEmployees</span>();</span><br><span class="line">				flag = <span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			current = current-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag == <span class="literal">false</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;\t未能查询到该编号！&quot;</span> &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (input == <span class="string">&#x27;2&#x27;</span>) &#123;<span class="comment">//按姓名查询</span></span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t请输入需要查询的员工姓名:&quot;</span>;</span><br><span class="line">		cin &gt;&gt; queryname;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t========================================================================================&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;性别&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;部门&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;级别&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;工资&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">while</span> (current != <span class="literal">NULL</span>) &#123;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">getname</span>() == queryname) &#123;</span><br><span class="line">				current-&gt;e.<span class="built_in">showEmployees</span>();</span><br><span class="line">				flag = <span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			current = current-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (flag == <span class="literal">false</span>) &#123;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;\t未能查询到该员工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (input == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t无效的选择！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display_all</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Linklist current = head-&gt;next;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t************员工信息展示************&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t==================================================================================================&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;性别&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;部门&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;级别&quot;</span> &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; <span class="string">&quot;工资&quot;</span> &lt;&lt; endl;</span><br><span class="line">	<span class="keyword">while</span> (current != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		current-&gt;e.<span class="built_in">showEmployees</span>();</span><br><span class="line">		current = current-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t===========================================END=====================================================&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify_employee</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> modifyid;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">	<span class="type">char</span> item;</span><br><span class="line">	Linklist current = head-&gt;next;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;请输入需要修改的员工编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; modifyid;</span><br><span class="line">	<span class="keyword">while</span> (current != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (current-&gt;e.<span class="built_in">getId</span>() == modifyid) &#123;</span><br><span class="line">			current-&gt;e.<span class="built_in">showEmployees</span>();</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;请输入需要修改的项目的序号【1-姓名|2-性别|3-部门|4-级别|5-工资】:&quot;</span>;</span><br><span class="line">			cin &gt;&gt; item;</span><br><span class="line">			<span class="built_in">clear_buffer</span>();</span><br><span class="line">			<span class="keyword">switch</span> (item) &#123;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>: current-&gt;e.<span class="built_in">modifyname</span>(); <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:current-&gt;e.<span class="built_in">modifygender</span>(); <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:current-&gt;e.<span class="built_in">modifydepartment</span>(); <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:current-&gt;e.<span class="built_in">modifylevel</span>(); <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:current-&gt;e.<span class="built_in">modifysalary</span>(); <span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			flag = <span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		current = current-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">save</span>();</span><br><span class="line">	<span class="keyword">if</span> (flag == <span class="literal">false</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;未查找到该编号的员工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">delete_employee</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	Linklist current = head-&gt;next;</span><br><span class="line">	Linklist current_2 = head;</span><br><span class="line">	<span class="type">int</span> id;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t请输入需要删除的员工编号：&quot;</span>;</span><br><span class="line">	cin &gt;&gt; id;</span><br><span class="line">	<span class="built_in">clear_buffer</span>();</span><br><span class="line">	<span class="keyword">while</span> (current != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (current-&gt;e.<span class="built_in">getId</span>() == id)</span><br><span class="line">		&#123;</span><br><span class="line">			current_2-&gt;next = current-&gt;next;</span><br><span class="line">			current = <span class="literal">NULL</span>;</span><br><span class="line">			cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;\t\t\t\t删除成功！&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">			flag = <span class="literal">false</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		current_2 = current;</span><br><span class="line">		current = current-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (flag == <span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;记录为空！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">static_employee</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> choose;</span><br><span class="line">	<span class="type">int</span> allnum = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> mnum = <span class="number">0</span>, spnum = <span class="number">0</span>, smnum = <span class="number">0</span>, tenum = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> bnum = <span class="number">0</span>, gnum = <span class="number">0</span>;</span><br><span class="line">	Linklist current = head-&gt;next, current_2 = head-&gt;next;</span><br><span class="line">	<span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t╔═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╗&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                ****统计方式****               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                1、统计所有员工数量             ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                2、统计各类员工数量             ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                3、统计员工性别                 ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                0、返回主菜单                  ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t‖                                               ‖&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t╚═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═ ═╝&quot;</span> &lt;&lt; endl;</span><br><span class="line">	cout &lt;&lt; <span class="string">&quot;\t\t\t\t请输入数字选择统计的方式:&quot;</span>;</span><br><span class="line">	cin &gt;&gt; choose;</span><br><span class="line">	<span class="built_in">clear_buffer</span>();</span><br><span class="line">	<span class="keyword">if</span> (choose == <span class="string">&#x27;1&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">while</span> (current != <span class="literal">NULL</span>) &#123;</span><br><span class="line">			allnum++;</span><br><span class="line">			current = current-&gt;next;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t本公司共有:【&quot;</span> &lt;&lt; allnum &lt;&lt; <span class="string">&quot;】员工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (choose == <span class="string">&#x27;2&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">while</span> (current != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">gettype</span>() == <span class="string">&quot;经理&quot;</span>) &#123; mnum++;current = current-&gt;next; <span class="keyword">continue</span>; &#125;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">gettype</span>() == <span class="string">&quot;销售人员&quot;</span>) &#123; spnum++; current = current-&gt;next; <span class="keyword">continue</span>; &#125;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">gettype</span>() == <span class="string">&quot;销售经理&quot;</span>) &#123; smnum++; current = current-&gt;next; <span class="keyword">continue</span>; &#125;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">gettype</span>() == <span class="string">&quot;技术人员&quot;</span>) &#123; tenum++; current = current-&gt;next; <span class="keyword">continue</span>; &#125;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t本公司共有:【&quot;</span> &lt;&lt; mnum &lt;&lt; <span class="string">&quot;】经理！&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t本公司共有:【&quot;</span> &lt;&lt; spnum &lt;&lt; <span class="string">&quot;】销售人员！&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t本公司共有:【&quot;</span> &lt;&lt; smnum &lt;&lt; <span class="string">&quot;】销售经理！&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t本公司共有:【&quot;</span> &lt;&lt; tenum &lt;&lt; <span class="string">&quot;】技术人员！&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (choose == <span class="string">&#x27;3&#x27;</span>) &#123;</span><br><span class="line">		<span class="keyword">while</span> (current != <span class="literal">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">getgender</span>() == <span class="string">&quot;男&quot;</span> || current-&gt;e.<span class="built_in">getgender</span>() == <span class="string">&quot;M&quot;</span> || current-&gt;e.<span class="built_in">getgender</span>() == <span class="string">&quot;m&quot;</span>) &#123; bnum++; current = current-&gt;next; <span class="keyword">continue</span>; &#125;</span><br><span class="line">			<span class="keyword">if</span> (current-&gt;e.<span class="built_in">getgender</span>() == <span class="string">&quot;女&quot;</span> || current-&gt;e.<span class="built_in">getgender</span>() == <span class="string">&quot;F&quot;</span> || current-&gt;e.<span class="built_in">getgender</span>() == <span class="string">&quot;f&quot;</span>) &#123; gnum++; current = current-&gt;next; <span class="keyword">continue</span>; &#125;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t本公司共有:【&quot;</span> &lt;&lt; bnum &lt;&lt; <span class="string">&quot;】男员工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t本公司共有:【&quot;</span> &lt;&lt; gnum &lt;&lt; <span class="string">&quot;】女员工！&quot;</span> &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (choose == <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t无效的统计选择！&quot;</span> &lt;&lt; endl;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;\t\t\t\t&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">	Linklist current = head-&gt;next;</span><br><span class="line">	ofstream outfile;</span><br><span class="line">	outfile.<span class="built_in">open</span>(<span class="string">&quot;employee.txt&quot;</span>, ios::trunc | ios::out);</span><br><span class="line">	<span class="keyword">if</span> (!outfile) &#123; <span class="comment">//打开失败</span></span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;error opening source file.&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">listlength</span>();i++ ) &#123;</span><br><span class="line">		outfile &lt;&lt; current-&gt;e.<span class="built_in">getId</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; current-&gt;e.<span class="built_in">getname</span>() &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; current-&gt;e.<span class="built_in">getgender</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; current-&gt;e.<span class="built_in">getdepartment</span>() &lt;&lt; <span class="string">&quot; &quot;</span>&lt;&lt; current-&gt;e.<span class="built_in">getlevel</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; current-&gt;e.<span class="built_in">getsalary</span>() &lt;&lt; endl;</span><br><span class="line">		current = current-&gt;next;</span><br><span class="line">	&#125;</span><br><span class="line">	outfile.<span class="built_in">close</span>();<span class="comment">/*循环结束后，关闭输出文件流 outfile*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">load</span><span class="params">()</span></span>&#123;</span><br><span class="line">	Linklist current = <span class="keyword">new</span> Node;</span><br><span class="line">	current-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	Linklist H = current;</span><br><span class="line">	Linklist p = H;</span><br><span class="line">	<span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">	<span class="type">int</span> Id=<span class="literal">NULL</span>;</span><br><span class="line">	string Name;</span><br><span class="line">	string Gender;</span><br><span class="line">	string Department;</span><br><span class="line">	string Level;</span><br><span class="line">	<span class="type">double</span> salary;</span><br><span class="line">	<span class="function">ifstream <span class="title">infile</span><span class="params">(<span class="string">&quot;employee.txt&quot;</span>,ios::in )</span></span>;</span><br><span class="line">	<span class="keyword">if</span> (!infile) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;error opening source file.&quot;</span> &lt;&lt; endl;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(infile &gt;&gt; Id&gt;&gt;Name &gt;&gt; Gender &gt;&gt; Department &gt;&gt; Level &gt;&gt; salary) </span><br><span class="line">	&#123;</span><br><span class="line">		flag =<span class="literal">false</span>;</span><br><span class="line">		current-&gt;e.<span class="built_in">saveid</span>(Id);</span><br><span class="line">		current-&gt;e.<span class="built_in">savename</span>(Name);</span><br><span class="line">		current-&gt;e.<span class="built_in">savegender</span>(Gender);</span><br><span class="line">		current-&gt;e.<span class="built_in">savedepartment</span>(Department);</span><br><span class="line">		current-&gt;e.<span class="built_in">savelevel</span>(Level);</span><br><span class="line">		current-&gt;e.<span class="built_in">savesalary</span>(salary);</span><br><span class="line">		p-&gt;next = current;</span><br><span class="line">		p = current;</span><br><span class="line">		Linklist newNode = <span class="keyword">new</span> Node;</span><br><span class="line">		newNode-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">		current-&gt;next = newNode;</span><br><span class="line">		current = newNode;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">delete</span> current;</span><br><span class="line">	p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">	<span class="keyword">if</span> (flag)</span><br><span class="line">	&#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;文件为空！&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	infile.<span class="built_in">close</span>();</span><br><span class="line">	head-&gt;next = H;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有误存储</span></span><br><span class="line"><span class="comment">//void save()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//	ofstream f(&quot;employee.dat&quot;, ios::trunc | ios::out | ios::binary);</span></span><br><span class="line"><span class="comment">//	Linklist current = head-&gt;next;</span></span><br><span class="line"><span class="comment">//	if (!f)</span></span><br><span class="line"><span class="comment">//	&#123;</span></span><br><span class="line"><span class="comment">//		cerr &lt;&lt; &quot;open error!&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//		abort();</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line"><span class="comment">//	while (current != NULL)</span></span><br><span class="line"><span class="comment">//	&#123;</span></span><br><span class="line"><span class="comment">//		f.write(reinterpret_cast&lt;char*&gt;(&amp;current-&gt;e), sizeof(current-&gt;e));</span></span><br><span class="line"><span class="comment">//		current = current-&gt;next;</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line"><span class="comment">//	f.close();</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//void load()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//	ifstream f(&quot;employee.dat&quot;, ios::in | ios::binary);</span></span><br><span class="line"><span class="comment">//	if (!f)</span></span><br><span class="line"><span class="comment">//	&#123;</span></span><br><span class="line"><span class="comment">//		cerr &lt;&lt; &quot;open error!&quot; &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//		abort();</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line"><span class="comment">//	Linklist current = new Node;</span></span><br><span class="line"><span class="comment">//	current-&gt;next = NULL;</span></span><br><span class="line"><span class="comment">//	Linklist H = current;</span></span><br><span class="line"><span class="comment">//	Linklist p = H;</span></span><br><span class="line"><span class="comment">//	bool flag = true;</span></span><br><span class="line"><span class="comment">//	while (f.read(reinterpret_cast&lt;char*&gt;(&amp;current-&gt;e), sizeof(current-&gt;e))) &#123;</span></span><br><span class="line"><span class="comment">//		flag = false;</span></span><br><span class="line"><span class="comment">//		p-&gt;next = current;</span></span><br><span class="line"><span class="comment">//		p = current;</span></span><br><span class="line"><span class="comment">//		Linklist newNode = new Node;</span></span><br><span class="line"><span class="comment">//		newNode-&gt;next = NULL;</span></span><br><span class="line"><span class="comment">//		current-&gt;next = newNode;</span></span><br><span class="line"><span class="comment">//		current = newNode;</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line"><span class="comment">//	delete current;</span></span><br><span class="line"><span class="comment">//	p-&gt;next = NULL;</span></span><br><span class="line"><span class="comment">//	if (flag)</span></span><br><span class="line"><span class="comment">//	&#123;</span></span><br><span class="line"><span class="comment">//		cout &lt;&lt; &quot;文件为空！&quot;;</span></span><br><span class="line"><span class="comment">//		exit(0);</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line"><span class="comment">//	f.close();</span></span><br><span class="line"><span class="comment">//	head-&gt;next = H;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>Languages</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>敬请T期待</title>
    <url>/2024/01/16/%E6%95%AC%E8%AF%B7T%E6%9C%9F%E5%BE%85/</url>
    <content><![CDATA[<h1 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h1><h2 id="HELLO"><a href="#HELLO" class="headerlink" title="HELLO!"></a>HELLO!</h2><blockquote>
<p>敬请T期待</p>
</blockquote>
]]></content>
      <categories>
        <category>Life</category>
      </categories>
      <tags>
        <tag>Begin</tag>
      </tags>
  </entry>
  <entry>
    <title>Web_白帽子</title>
    <url>/2024/01/25/Web-%E7%99%BD%E5%B8%BD%E5%AD%90/</url>
    <content><![CDATA[<h2 id="Web基础介绍"><a href="#Web基础介绍" class="headerlink" title="Web基础介绍"></a>Web基础介绍</h2><blockquote>
<p>知识点罗列：</p>
<ul>
<li>URL概念、结构格式</li>
<li>HTTP报文结构</li>
<li>cookie含义</li>
<li>Set-cookie含义</li>
<li>Referer的作用</li>
<li>状态码301和302的含义</li>
<li>Location的含义</li>
</ul>
</blockquote>
<h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><blockquote>
<p>统一资源定位符（Uniform Resource Locator）</p>
</blockquote>
<blockquote>
<p>作用：定位服务器资源</p>
</blockquote>
<blockquote>
<p>URL格式：schemna:&#x2F;&#x2F;host[:post#]&#x2F;path&#x2F;…&#x2F;[?query-string][#anchor]</p>
<p>schemna	底层协议(例如：http,https,ftp…)</p>
<p>host		  服务器的域名或IP地址</p>
<p>:post 		服务器的端口，HTTP默认端口是80(可省略)，其他端口需要指明</p>
<p>&#x2F;path&#x2F;…&#x2F;	访问资源的路径</p>
<p>？query-string 发送给http服务器的数据</p>
<p>[#anchor]	 锚(上面链接隐藏了)</p>
</blockquote>
<h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><blockquote>
<p>超文本传输协议（Hyper Text Transfer Protocol）</p>
</blockquote>
<blockquote>
<p>作用：Web通信时使用的协议</p>
</blockquote>
<blockquote>
<ol>
<li><p>HTTP报文</p>
<p>HTTP报文是用于HTTP协议交互的信息，HTTP报文本身是由多行数据构成的字符串文本。客户端的HTTP报文叫做请求报文，服务器端的HTTP报文叫做响应报文。</p>
</li>
<li><p>HTTP报文结构</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="D:\Photo\typroa\http报文结构.png"
                      alt="http报文结构"
                ></p>
<p><strong>报文首部</strong>是客户端或服务器端需处理的<code>请求或响应</code>的内容及属性， 可以传递额外的重要信息。报文首部包括请求行和请求头部。</p>
<p>空行</p>
<p><strong>报文主体</strong>主要包含应被发送的数据。通常，不一定有报文主体。</p>
</li>
<li><p>HTTP请求报文结构</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="D:\Photo\typroa\http请求报文结构.png"
                      alt="HTTP请求报文结构"
                ></p>
<p>GET和POST的区别：</p>
<blockquote>
<p>（1）get是从服务器上获取数据（即下载），post是向服务器传送数据（即上传）。<br>（2）生成方式不同：<br>Get：URL输入；超连接；Form表单中method属性为get；Form表单中method为空。<br>Post只有一种：Form表单中method为Post。<br>（3）数据传送方式：Get传递的请求数据按照key-value的方式放在URL后面，在网址中可以直接看到，使用?分割URL和传输数据，传输的参数之间以&amp;相连，如：login.action?name&#x3D;user&amp;password&#x3D;123。所以安全性差。<br>POST方法会把请求的参数放到请求头部和空格下面的请求数据字段就是请求正文（请求体）中以&amp;分隔各个字段，请求行不包含参数，URL中不会额外附带参数。所以安全性高。<br>（3）发送数据大小的限制：通常GET请求可以用于获取轻量级的数据，而POST请求的内容数据量比较庞大些。<br>Get：1~2KB。get方法提交数据的大小直接影响到了URL的长度，但HTTP协议规范中其实是没有对URL限制长度的，限制URL长度的是客户端或服务器的支持的不同所影响。<br>Post：没有要求。post方式HTTP协议规范中也没有限定，起限制作用的是服务器的处理程序的能力。<br>（4）提交数据的安全：POST比GET方式的安全性要高。Get安全性差，Post安全性高。<br>通过GET提交数据，用户名和密码将明文出现在URL上，如果登录页面有浏览器缓存，或者其他人查看浏览器的历史记录，那么就可以拿到用户的账号和密码了。安全性将会很差。</p>
</blockquote>
</li>
<li><p>HTTP响应报文结构</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="D:\Photo\typroa\http响应报文结构.png"
                      alt="HTTP响应报文结构"
                ></p>
</li>
</ol>
<hr>
<p>版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。</p>
<p>参考文章</p>
<p>原文链接：<a class="link"   href="https://blog.csdn.net/qq_35887546/article/details/104216286" >https://blog.csdn.net/qq_35887546/article/details/104216286 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<blockquote>
<p>HTTP请求的方式</p>
<p>–GET</p>
<p>–POST</p>
<p>–HEAD				 与GET请求类似，不同在于与服务器只返回HTTP头部信息，没有页面内容</p>
<p>–PUT					上传指定URL的描述</p>
<p>–DELETE			 删除指定资源</p>
<p>–OPTIONS 		 返回服务器支持的HTTP方法</p>
</blockquote>
<h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><blockquote>
<p>cookie:相当于用户的凭证，类似与用户的通行证，很重要。</p>
<p>set-cookie:服务器要求浏览器设置cookie</p>
</blockquote>
<h3 id="Referer"><a href="#Referer" class="headerlink" title="Referer"></a>Referer</h3><blockquote>
<p>Referer的作用：</p>
<p>–告知服务器该请求的来源（浏览器自动加上）</p>
<p>–统计流量</p>
<p>–判断来源合法性：防止盗链，防止CSRF漏洞</p>
</blockquote>
<h3 id="Location"><a href="#Location" class="headerlink" title="Location"></a>Location</h3><blockquote>
<p>Location：跳转到地址</p>
</blockquote>
<h3 id="响应报文状态码"><a href="#响应报文状态码" class="headerlink" title="响应报文状态码"></a>响应报文状态码</h3><blockquote>
<p>响应报文状态码</p>
<p><strong>3</strong>：完成此请求必须进一步处理**</p>
<p>301——删除请求数据</p>
<p>302——在其他地址发现了请求数据</p>
<hr>
<p>详细状态码：<a class="link"   href="https://blog.csdn.net/qq_35887546/article/details/104216807" >https://blog.csdn.net/qq_35887546/article/details/104216807 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</blockquote>
<p>敬请T期待！</p>
]]></content>
      <tags>
        <tag>-Web -安全 -笔记</tag>
      </tags>
  </entry>
</search>
